@using StrikeTrip.Models;
@using StrikeTrip.UtilityMethods;

@model List<Trip>

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<script type="text/javascript">

    var center = new google.maps.LatLng(@ViewBag.Latitude, @ViewBag.Longitude);
    $(document).ready(function () {
        map = new google.maps.Map(document.getElementById("map"), {
            zoom: 4,
            center: center,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var flightPlanCoordinates = [

            { lat: 34.0522, lng: -118.243 },
            { lat: @Decimal.Parse(ViewBag.Latitude), lng: @Decimal.Parse(ViewBag.Longitude)}



        ];
    var flightPath = new google.maps.Polyline({
        path: flightPlanCoordinates,
        geodesic: true,
        strokeColor: '#FF0000',
        strokeOpacity: 1.0,
        strokeWeight: 1
    });

    flightPath.setMap(map);
    });

</script>



<div class="container-fluid form_map">
    <div class="row">
        <div class="col-md-4">



            <h2>Pick Your Standards</h2>
            @using (Html.BeginForm("Trips", "Home", FormMethod.Get))
            {

                <div style="padding-left: 45px">
                    @Html.Label("InputMaxPrice", "Max price")<br />
                    @Html.TextBox("inputPrice", "500")

                </div>
                <div style="padding-left: 45px">
                    @Html.Label("InputMinSurfHeight", "Min surf height")<br />
                    @Html.TextBox("inputHeight", "5")

                </div>
                <div style="padding-left: 45px">
                    @Html.Label("InputDepartureDate", "Departure date")<br />
                    @Html.TextBox("inputDepartureDate")
                </div>
                <div style="padding-left: 45px">
                    @Html.Label("InputeReturnDate", "Return date")<br />
                    @Html.TextBox("inputReturnDate")
                </div>
                <div style="padding-left: 45px">
                    <br />
                    <button style="box-shadow: none;">Submit</button>
                </div>


            }

        </div>
        <div class="col-md-2"></div>
        <div class="col-md-7 text-center">
            <h3>Best option: @Model[0].BestOption(Model[0].LocationName)</h3>

        </div>
    </div>
</div>

@{
    if (Model.Count == 1 && Model[0].LocationName == null)
    {
        <div class="container-fluid parameters">
            <div class="row">
                <div class="col-xs-6 col-sm-3">Price: <strong class="no_flights_params">@Model[0].PriceString(Model[0].InputMaxPrice)</strong></div>
                <div class="col-xs-6 col-sm-3">Surf height: <strong class="no_flights_params">@Model[0].SurfHeightString(Model[0].InputMinSurfHeight)</strong></div>
                <div class="col-xs-6 col-sm-3">Departure date: <strong class="no_flights_params">@Model[0].DateTimeString(Model[0].InputDepartureDate)</strong></div>
                <div class="col-xs-6 col-sm-3">Return date: <strong class="no_flights_params">@Model[0].DateTimeString(Model[0].InputReturnDate)</strong></div>
            </div>
        </div>
    }
    else
    {

        <div class="container-fluid parameters">
            <div class="row">
                <div class="col-xs-6 col-sm-3">Max price: <strong>@Model[0].PriceString(Model[0].InputMaxPrice)</strong></div>
                <div class="col-xs-6 col-sm-3">Min surf height: <strong>@Model[0].SurfHeightString(Model[0].InputMinSurfHeight)</strong></div>
                <div class="col-xs-6 col-sm-3">Departure date: <strong>@Model[0].DateTimeString(Model[0].InputDepartureDate)</strong></div>
                <div class="col-xs-6 col-sm-3">Return date: <strong>@Model[0].DateTimeString(Model[0].InputReturnDate)</strong></div>
            </div>
        </div>


    }
}

<div class="separate"></div>

<table class="table">
    <tr>
        <th>
            Location
        </th>
        <th>
            Spot
        </th>
        <th>
            Departure Date
        </th>
        <th>
            Return Date
        </th>
        <th>
            Max Surf Height During Trip
        </th>
        <th>
            Number of Days with Good Surf
        </th>
        <th>
            Flight Price
        </th>
    </tr>
    
    @if (Model.Count >= 1 && Model[0].LocationName != null)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LocationName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SpotName)
                </td>
                <td>
                    @item.DepartureDate.ToShortDateString()
                </td>
                <td>
                    @item.ReturnDate.ToShortDateString()
                </td>
                <td>
                    @Math.Truncate(item.MaxSurfHeight)ft
                </td>
                <td>
                    @item.SurfDays()
                </td>
                <td>
                    $@Math.Truncate(item.Price)
                </td>
                <td>
                    @Html.ActionLink("Forecast", "Forecast", new { id = item.SpotName }, new { @class = "details_button" })
                </td>
            </tr>
        }
    }

</table>
@if (Model.Count == 1 && Model[0].LocationName == null)
{

    <div class="no_flights_table">No trips are available with the selected characteristics.</div>
}

<div id="map_wrap" style="position: absolute; top: 150px; bottom: 300px; left: 430px; right: 130px;">
    <div id="map" style="width: 100%; height: 100%;">
    </div>
</div>
